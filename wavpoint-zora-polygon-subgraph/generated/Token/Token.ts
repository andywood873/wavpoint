// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CreatedDrop extends ethereum.Event {
  get params(): CreatedDrop__Params {
    return new CreatedDrop__Params(this);
  }
}

export class CreatedDrop__Params {
  _event: CreatedDrop;

  constructor(event: CreatedDrop) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get editionContractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Token__createDropInputSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class Token__createEditionInputSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class Token__setupDropsContractInputSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class Token extends ethereum.SmartContract {
  static bind(address: Address): Token {
    return new Token("Token", address);
  }

  contractVersion(): BigInt {
    let result = super.call(
      "contractVersion",
      "contractVersion():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_contractVersion(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contractVersion",
      "contractVersion():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createAndConfigureDrop(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    setupCalls: Array<Bytes>,
    metadataRenderer: Address,
    metadataInitializer: Bytes
  ): Address {
    let result = super.call(
      "createAndConfigureDrop",
      "createAndConfigureDrop(string,string,address,uint64,uint16,address,bytes[],address,bytes):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromBytesArray(setupCalls),
        ethereum.Value.fromAddress(metadataRenderer),
        ethereum.Value.fromBytes(metadataInitializer)
      ]
    );

    return result[0].toAddress();
  }

  try_createAndConfigureDrop(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    setupCalls: Array<Bytes>,
    metadataRenderer: Address,
    metadataInitializer: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createAndConfigureDrop",
      "createAndConfigureDrop(string,string,address,uint64,uint16,address,bytes[],address,bytes):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromBytesArray(setupCalls),
        ethereum.Value.fromAddress(metadataRenderer),
        ethereum.Value.fromBytes(metadataInitializer)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createDrop(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    saleConfig: Token__createDropInputSaleConfigStruct,
    metadataURIBase: string,
    metadataContractURI: string
  ): Address {
    let result = super.call(
      "createDrop",
      "createDrop(string,string,address,uint64,uint16,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),string,string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromString(metadataURIBase),
        ethereum.Value.fromString(metadataContractURI)
      ]
    );

    return result[0].toAddress();
  }

  try_createDrop(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    saleConfig: Token__createDropInputSaleConfigStruct,
    metadataURIBase: string,
    metadataContractURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createDrop",
      "createDrop(string,string,address,uint64,uint16,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),string,string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromString(metadataURIBase),
        ethereum.Value.fromString(metadataContractURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createEdition(
    name: string,
    symbol: string,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    defaultAdmin: Address,
    saleConfig: Token__createEditionInputSaleConfigStruct,
    description: string,
    animationURI: string,
    imageURI: string
  ): Address {
    let result = super.call(
      "createEdition",
      "createEdition(string,string,uint64,uint16,address,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),string,string,string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(animationURI),
        ethereum.Value.fromString(imageURI)
      ]
    );

    return result[0].toAddress();
  }

  try_createEdition(
    name: string,
    symbol: string,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    defaultAdmin: Address,
    saleConfig: Token__createEditionInputSaleConfigStruct,
    description: string,
    animationURI: string,
    imageURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createEdition",
      "createEdition(string,string,uint64,uint16,address,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),string,string,string):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(animationURI),
        ethereum.Value.fromString(imageURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dropMetadataRenderer(): Address {
    let result = super.call(
      "dropMetadataRenderer",
      "dropMetadataRenderer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_dropMetadataRenderer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dropMetadataRenderer",
      "dropMetadataRenderer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  editionMetadataRenderer(): Address {
    let result = super.call(
      "editionMetadataRenderer",
      "editionMetadataRenderer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_editionMetadataRenderer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "editionMetadataRenderer",
      "editionMetadataRenderer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  setupDropsContract(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    saleConfig: Token__setupDropsContractInputSaleConfigStruct,
    metadataRenderer: Address,
    metadataInitializer: Bytes
  ): Address {
    let result = super.call(
      "setupDropsContract",
      "setupDropsContract(string,string,address,uint64,uint16,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),address,bytes):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromAddress(metadataRenderer),
        ethereum.Value.fromBytes(metadataInitializer)
      ]
    );

    return result[0].toAddress();
  }

  try_setupDropsContract(
    name: string,
    symbol: string,
    defaultAdmin: Address,
    editionSize: BigInt,
    royaltyBPS: i32,
    fundsRecipient: Address,
    saleConfig: Token__setupDropsContractInputSaleConfigStruct,
    metadataRenderer: Address,
    metadataInitializer: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "setupDropsContract",
      "setupDropsContract(string,string,address,uint64,uint16,address,(uint104,uint32,uint64,uint64,uint64,uint64,bytes32),address,bytes):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
        ethereum.Value.fromAddress(defaultAdmin),
        ethereum.Value.fromUnsignedBigInt(editionSize),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(royaltyBPS)),
        ethereum.Value.fromAddress(fundsRecipient),
        ethereum.Value.fromTuple(saleConfig),
        ethereum.Value.fromAddress(metadataRenderer),
        ethereum.Value.fromBytes(metadataInitializer)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _editionMetadataRenderer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dropMetadataRenderer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateAndConfigureDropCall extends ethereum.Call {
  get inputs(): CreateAndConfigureDropCall__Inputs {
    return new CreateAndConfigureDropCall__Inputs(this);
  }

  get outputs(): CreateAndConfigureDropCall__Outputs {
    return new CreateAndConfigureDropCall__Outputs(this);
  }
}

export class CreateAndConfigureDropCall__Inputs {
  _call: CreateAndConfigureDropCall;

  constructor(call: CreateAndConfigureDropCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get defaultAdmin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get royaltyBPS(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get fundsRecipient(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get setupCalls(): Array<Bytes> {
    return this._call.inputValues[6].value.toBytesArray();
  }

  get metadataRenderer(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get metadataInitializer(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class CreateAndConfigureDropCall__Outputs {
  _call: CreateAndConfigureDropCall;

  constructor(call: CreateAndConfigureDropCall) {
    this._call = call;
  }

  get newDropAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateDropCall extends ethereum.Call {
  get inputs(): CreateDropCall__Inputs {
    return new CreateDropCall__Inputs(this);
  }

  get outputs(): CreateDropCall__Outputs {
    return new CreateDropCall__Outputs(this);
  }
}

export class CreateDropCall__Inputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get defaultAdmin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get royaltyBPS(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get fundsRecipient(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get saleConfig(): CreateDropCallSaleConfigStruct {
    return changetype<CreateDropCallSaleConfigStruct>(
      this._call.inputValues[6].value.toTuple()
    );
  }

  get metadataURIBase(): string {
    return this._call.inputValues[7].value.toString();
  }

  get metadataContractURI(): string {
    return this._call.inputValues[8].value.toString();
  }
}

export class CreateDropCall__Outputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateDropCallSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class CreateEditionCall extends ethereum.Call {
  get inputs(): CreateEditionCall__Inputs {
    return new CreateEditionCall__Inputs(this);
  }

  get outputs(): CreateEditionCall__Outputs {
    return new CreateEditionCall__Outputs(this);
  }
}

export class CreateEditionCall__Inputs {
  _call: CreateEditionCall;

  constructor(call: CreateEditionCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get editionSize(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get royaltyBPS(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get fundsRecipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get defaultAdmin(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get saleConfig(): CreateEditionCallSaleConfigStruct {
    return changetype<CreateEditionCallSaleConfigStruct>(
      this._call.inputValues[6].value.toTuple()
    );
  }

  get description(): string {
    return this._call.inputValues[7].value.toString();
  }

  get animationURI(): string {
    return this._call.inputValues[8].value.toString();
  }

  get imageURI(): string {
    return this._call.inputValues[9].value.toString();
  }
}

export class CreateEditionCall__Outputs {
  _call: CreateEditionCall;

  constructor(call: CreateEditionCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateEditionCallSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetupDropsContractCall extends ethereum.Call {
  get inputs(): SetupDropsContractCall__Inputs {
    return new SetupDropsContractCall__Inputs(this);
  }

  get outputs(): SetupDropsContractCall__Outputs {
    return new SetupDropsContractCall__Outputs(this);
  }
}

export class SetupDropsContractCall__Inputs {
  _call: SetupDropsContractCall;

  constructor(call: SetupDropsContractCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get defaultAdmin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get editionSize(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get royaltyBPS(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get fundsRecipient(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get saleConfig(): SetupDropsContractCallSaleConfigStruct {
    return changetype<SetupDropsContractCallSaleConfigStruct>(
      this._call.inputValues[6].value.toTuple()
    );
  }

  get metadataRenderer(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get metadataInitializer(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class SetupDropsContractCall__Outputs {
  _call: SetupDropsContractCall;

  constructor(call: SetupDropsContractCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetupDropsContractCallSaleConfigStruct extends ethereum.Tuple {
  get publicSalePrice(): BigInt {
    return this[0].toBigInt();
  }

  get maxSalePurchasePerAddress(): BigInt {
    return this[1].toBigInt();
  }

  get publicSaleStart(): BigInt {
    return this[2].toBigInt();
  }

  get publicSaleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get presaleStart(): BigInt {
    return this[4].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[5].toBigInt();
  }

  get presaleMerkleRoot(): Bytes {
    return this[6].toBytes();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
